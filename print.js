require("dotenv").config();const winston=require("winston"),{PapertrailTransport:PapertrailTransport}=require("winston-papertrail-transport"),papertrailTransport=new PapertrailTransport({host:"logs4.papertrailapp.com",port:27464,hostname:process.env.PROJECT_NAME}),consoleTransport=new winston.transports.Console,fileTransport=new winston.transports.File({filename:"winston.log"}),getLoggerConfig=()=>({format:winston.format.combine(winston.format.colorize(),winston.format.simple(),winston.format.printf(({level:e,message:t})=>`${e} ${t}`))}),logger=winston.createLogger({...getLoggerConfig(),transports:[papertrailTransport,consoleTransport,fileTransport]});papertrailTransport.connection.on("error",e=>{console.error("Error recieved from PapertrailTransport: "+e.message)}),papertrailTransport.connection.on("connect",e=>{console.log(e)});const ThermalPrinter=require("node-thermal-printer").printer,PrinterTypes=require("node-thermal-printer").types;let printer=new ThermalPrinter({type:PrinterTypes.EPSON,interface:process.env.PRINTER_ADDRESS,options:{timeout:process.env.IS_BT?1e3:1e4}});const escpos=require("escpos");escpos.Bluetooth=require("escpos-bluetooth");const address=process.env.PRINTER_BT_MAC,channel=1,bluetoothDevice=new escpos.Bluetooth(address,1),bluetoothOptions={encoding:"cp1252",width:48},bluetoothPrinter=new escpos.Printer(bluetoothDevice,bluetoothOptions),option={cors:{origin:"*",methods:["GET","POST","OPTIONS"],allowedHeaders:["Origin","X-Requested-With","Content-Type","Accept"],credentials:!0}},io=require("socket.io")(option),print=async e=>(logger.info("printing order: "+JSON.stringify(e)),printer.alignCenter(),await printer.printImage("./assets/repo-icon.png"),printer.setTextDoubleHeight(),printer.setTextDoubleWidth(),printer.println("PIZZABAR"),printer.newLine(),printer.alignLeft(),printer.setTextNormal(),printer.bold(!0),printer.invert(!0),printer.println(e.customerName),printer.bold(!1),printer.invert(!1),printer.println("Order no: "+e.orderId),printer.println("Date: "+(new Date).toLocaleString()),printer.drawLine(),e.items.forEach(e=>{printer.tableCustom([{text:e.name,align:"LEFT",width:.6},{text:e.price,align:"RIGHT",width:.3}])}),printer.drawLine(),printer.setTextDoubleHeight(),printer.setTextDoubleWidth(),printer.alignRight(),printer.println(e.totalPrice),printer.alignLeft(),printer.printQR("https://pizzabar.party"),printer.newLine(),printer.setTextNormal(),printer.alignCenter(),printer.setTypeFontB(),printer.println("Tingager 5 - 8930 Randers NØ - Denmark"),printer.println("Email: info@pizzabar.party"),printer.println("Tel: (+45) 91 45 42 13"),printer.cut(),await printer.execute()),printBT=async(e,t)=>(logger.info("printing order: "+JSON.stringify(e)),await bluetoothPrinter.encode("cp1252"),await bluetoothPrinter.font("A"),await bluetoothPrinter.align("CT"),await bluetoothPrinter.image(t),await bluetoothPrinter.size(2,2),await bluetoothPrinter.style("NORMAL"),await bluetoothPrinter.text("PIZZABAR"),await bluetoothPrinter.newLine(),await bluetoothPrinter.align("LT"),await bluetoothPrinter.size(1,1),await bluetoothPrinter.style("B"),await bluetoothPrinter.text(e.customerName),await bluetoothPrinter.style("NORMAL"),await bluetoothPrinter.text("Order no: "+e.orderId),await bluetoothPrinter.text("Date: "+(new Date).toLocaleString()),await bluetoothPrinter.newLine(),await e.items.forEach(e=>{bluetoothPrinter.tableCustom([{text:e.name,align:"LEFT",width:.4},{text:e.price,align:"CENTER",width:.26}])}),await bluetoothPrinter.newLine(),await bluetoothPrinter.align("RT"),await bluetoothPrinter.style("B"),await bluetoothPrinter.text(e.totalPrice),await bluetoothPrinter.newLine(),await bluetoothPrinter.align("CT"),await bluetoothPrinter.style("NORMAL"),await bluetoothPrinter.text("Tingager 5 - 8930 Randers NØ"),await bluetoothPrinter.text("Email: info@pizzabar.party"),await bluetoothPrinter.text("Tel: (+45) 91 45 42 13"),await bluetoothPrinter);io.on("connection",async e=>{logger.info("socket.io client connect by socket id: "+e.id);let t=await printer.isPrinterConnected();logger.info("WIFI printer state: "+t),logger.info("BT printer state: "+Boolean(bluetoothPrinter)),t||bluetoothPrinter?(logger.info("printer connected."),e.on("printOrder",({order:r})=>{parsedOrder=JSON.parse(r),t&&print(parsedOrder).then(t=>{logger.info("print done by result: "+t),printer.clear(),e.emit("orderPrinted",parsedOrder.orderId)}).catch(e=>{logger.error("print failed: ",e)}),bluetoothPrinter&&bluetoothDevice.open(t=>{t?logger.error("print failed: ",t):escpos.Image.load("./assets/repo-icon.png",t=>{printBT(parsedOrder,t).then(t=>{logger.info("print done by result: "+JSON.stringify(t.adapter)),bluetoothPrinter.cut().close(),e.emit("orderPrinted",parsedOrder.orderId)}).catch(e=>{logger.error("print failed: ",e)})})})})):(logger.error("can not connect to printer!"),e.emit("printerError","PrinterError.PrinterIsNotConnected")),e.on("disconnect",t=>{logger.info("socket.io client disconnect by socket id: "+e.id+", and reason: "+t)})}),io.listen(process.env.SERVER_PORT);