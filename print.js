require("dotenv").config();const winston=require("winston"),{PapertrailTransport:PapertrailTransport}=require("winston-papertrail-transport"),papertrailTransport=new PapertrailTransport({host:"logs4.papertrailapp.com",port:27464,hostname:process.env.PROJECT_NAME}),consoleTransport=new winston.transports.Console,fileTransport=new winston.transports.File({filename:"winston.log"}),getLoggerConfig=()=>({format:winston.format.combine(winston.format.colorize(),winston.format.simple(),winston.format.printf(({level:r,message:e})=>`${r} ${e}`))}),logger=winston.createLogger({...getLoggerConfig(),transports:[papertrailTransport,consoleTransport,fileTransport]});papertrailTransport.connection.on("error",r=>{console.error("Error recieved from PapertrailTransport: "+r.message)}),papertrailTransport.connection.on("connect",r=>{console.log(r)});const ThermalPrinter=require("node-thermal-printer").printer,PrinterTypes=require("node-thermal-printer").types;let printer=new ThermalPrinter({type:PrinterTypes.EPSON,interface:process.env.PRINTER_ADDRESS,options:{timeout:1e4}});const option={cors:{origin:"*",methods:["GET","POST","OPTIONS"],allowedHeaders:["Origin","X-Requested-With","Content-Type","Accept"],credentials:!0}},io=require("socket.io")(option),print=async r=>(logger.info("printing order: "+JSON.stringify(r)),printer.alignCenter(),await printer.printImage("./assets/repo-icon.png"),printer.setTextDoubleHeight(),printer.setTextDoubleWidth(),printer.println("PIZZABAR"),printer.newLine(),printer.alignLeft(),printer.setTextNormal(),printer.bold(!0),printer.invert(!0),printer.println(r.customerName),printer.bold(!1),printer.invert(!1),printer.println("Order no: "+r.orderId),printer.println("Date: "+(new Date).toLocaleString()),printer.drawLine(),r.items.forEach(r=>{printer.tableCustom([{text:r.name,align:"LEFT",width:.6},{text:r.price,align:"RIGHT",width:.3}])}),printer.drawLine(),printer.setTextDoubleHeight(),printer.setTextDoubleWidth(),printer.alignRight(),printer.println(r.totalPrice),printer.alignLeft(),printer.printQR("https://pizzabar.party"),printer.newLine(),printer.setTextNormal(),printer.alignCenter(),printer.setTypeFontB(),printer.println("Tingager 5 - 8930 Randers NÃ˜ - Denmark"),printer.println("Email: info@pizzabar.party"),printer.println("Tel: (+45) 91 45 42 13"),printer.cut(),await printer.execute());io.on("connection",async r=>{logger.info("socket.io client connect by socket id: "+r.id);let e=await printer.isPrinterConnected();logger.info("printer state: "+e),e?(logger.info("printer connected."),r.on("printOrder",({order:e})=>{parsedOrder=JSON.parse(e),print(parsedOrder).then(e=>{logger.info("print done by result: "+e),printer.clear(),r.emit("orderPrinted",parsedOrder.orderId)}).catch(r=>{logger.error("print failed: ",r)})})):(logger.error("can not connect to printer!"),r.emit("printerError","PrinterError.PrinterIsNotConnected")),r.on("disconnect",e=>{logger.info("socket.io client disconnect by socket id: "+r.id+", and reason: "+e)})}),io.listen(process.env.SERVER_PORT);